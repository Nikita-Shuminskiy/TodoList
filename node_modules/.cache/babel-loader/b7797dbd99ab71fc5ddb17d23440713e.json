{"ast":null,"code":"var _jsxFileName = \"D:\\\\Incubator\\\\Lession_Week_TODO\\\\Tuesday\\\\less_5\\\\src\\\\App.tsx\";\nimport React, { useState } from 'react';\nimport './App.css';\nimport { Todolist } from './Todolist';\nimport { v1 } from 'uuid';\n\nfunction App() {\n  // BLL\n  const todoID_1 = v1();\n  const todoID_2 = v1();\n  const [todolist, setTodolist] = useState([// step 2\n  {\n    id: todoID_1,\n    title: \"Yoe\",\n    filter: 'all'\n  }, {\n    id: todoID_2,\n    title: \"HTML&CSS\",\n    filter: 'all'\n  }]);\n  let [tasks, setTasks] = useState({\n    // обьект\n    [todoID_1]: [{\n      id: v1(),\n      title: \"HTML&CSS\",\n      isDone: true\n    }, {\n      id: v1(),\n      title: \"JS\",\n      isDone: true\n    }, {\n      id: v1(),\n      title: \"ReactJS\",\n      isDone: false\n    }, {\n      id: v1(),\n      title: \"Rest API\",\n      isDone: false\n    }, {\n      id: v1(),\n      title: \"GraphQL\",\n      isDone: false\n    }],\n    [todoID_2]: [{\n      id: v1(),\n      title: \"HTML&CSS\",\n      isDone: true\n    }, {\n      id: v1(),\n      title: \"JS\",\n      isDone: true\n    }, {\n      id: v1(),\n      title: \"ReactJS\",\n      isDone: false\n    }, {\n      id: v1(),\n      title: \"Rest API\",\n      isDone: false\n    }, {\n      id: v1(),\n      title: \"GraphQL\",\n      isDone: false\n    }]\n  }); ///\n\n  let [filter, setFilter] = useState(\"all\");\n\n  function removeTask(taskID, todoLID) {\n    tasks[todoID_1] = tasks[todoID_1].filter(t => t.id != taskID); // имутабельно\n\n    setTasks({ ...tasks\n    }); // на верхний уровень пилим обьект\n  }\n\n  function addTask(title, todoLID) {\n    let task = {\n      id: v1(),\n      title: title,\n      isDone: false\n    };\n    let newTasks = [task, ...tasks];\n    setTasks(newTasks);\n  }\n\n  function changeStatus(taskId, isDone, todoLID) {\n    let task = tasks.find(t => t.id === taskId);\n\n    if (task) {\n      task.isDone = isDone;\n    }\n\n    setTasks([...tasks]);\n  }\n\n  function changeFilter(value, todoLID) {\n    setFilter(value);\n  }\n\n  let tasksForTodolist = tasks;\n\n  if (filter === \"active\") {\n    tasksForTodolist = tasks.filter(t => t.isDone === false);\n  }\n\n  if (filter === \"completed\") {\n    tasksForTodolist = tasks.filter(t => t.isDone === true);\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"App\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Todolist, {\n    title: \"What to learn\",\n    tasks: tasksForTodolist,\n    removeTask: removeTask,\n    changeFilter: changeFilter,\n    addTask: addTask,\n    changeTaskStatus: changeStatus,\n    filter: filter,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 13\n    }\n  }));\n}\n\nexport default App;","map":{"version":3,"sources":["D:/Incubator/Lession_Week_TODO/Tuesday/less_5/src/App.tsx"],"names":["React","useState","Todolist","v1","App","todoID_1","todoID_2","todolist","setTodolist","id","title","filter","tasks","setTasks","isDone","setFilter","removeTask","taskID","todoLID","t","addTask","task","newTasks","changeStatus","taskId","find","changeFilter","value","tasksForTodolist"],"mappings":"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","sourcesContent":["import React, {useState} from 'react';\r\nimport './App.css';\r\nimport { TaskType, Todolist } from './Todolist';\r\nimport {v1} from 'uuid';\r\n\r\nexport type FilterValuesType = \"all\" | \"active\" | \"completed\";\r\nexport type TodoListType = { // step 1\r\n    id:string\r\n    title:string\r\n    filter:FilterValuesType\r\n}\r\n\r\ntype TaskTypeState = {\r\n    [key:string]:TaskType[]\r\n}\r\n\r\n\r\n\r\nfunction App() {\r\n    // BLL\r\n    const todoID_1 = v1()\r\n    const todoID_2 = v1()\r\n    const [todolist,setTodolist] = useState<TodoListType[]>([ // step 2\r\n        {id: todoID_1, title: \"Yoe\", filter: 'all'},\r\n        {id: todoID_2, title: \"HTML&CSS\", filter: 'all'}\r\n\r\n    ])\r\n    let [tasks, setTasks] = useState<TaskTypeState>({ // обьект\r\n        [todoID_1]: [\r\n            {id: v1(), title: \"HTML&CSS\", isDone: true},\r\n            {id: v1(), title: \"JS\", isDone: true},\r\n            {id: v1(), title: \"ReactJS\", isDone: false},\r\n            {id: v1(), title: \"Rest API\", isDone: false},\r\n            {id: v1(), title: \"GraphQL\", isDone: false},\r\n        ],\r\n        [todoID_2]: [\r\n            {id: v1(), title: \"HTML&CSS\", isDone: true},\r\n            {id: v1(), title: \"JS\", isDone: true},\r\n            {id: v1(), title: \"ReactJS\", isDone: false},\r\n            {id: v1(), title: \"Rest API\", isDone: false},\r\n            {id: v1(), title: \"GraphQL\", isDone: false},\r\n        ]\r\n    });\r\n\r\n    ///\r\n    let [filter, setFilter] = useState<FilterValuesType>(\"all\");\r\n\r\n    function removeTask(taskID: string , todoLID:string) {\r\n        tasks[todoID_1] = tasks[todoID_1].filter(t => t.id != taskID); // имутабельно\r\n        setTasks({...tasks}); // на верхний уровень пилим обьект\r\n    }\r\n    function addTask(title: string, todoLID:string) {\r\n        let task = {id: v1(), title: title, isDone: false};\r\n        let newTasks = [task, ...tasks];\r\n        setTasks(newTasks);\r\n    }\r\n    function changeStatus(taskId: string, isDone: boolean,todoLID:string) {\r\n        let task = tasks.find(t => t.id === taskId);\r\n        if (task) {\r\n            task.isDone = isDone;\r\n        }\r\n\r\n        setTasks([...tasks]);\r\n    }\r\n    function changeFilter(value: FilterValuesType, todoLID:string) {\r\n        setFilter(value);\r\n    }\r\n    let tasksForTodolist = tasks;\r\n    if (filter === \"active\") {\r\n        tasksForTodolist = tasks.filter(t => t.isDone === false);\r\n    }\r\n    if (filter === \"completed\") {\r\n        tasksForTodolist = tasks.filter(t => t.isDone === true);\r\n    }\r\n\r\n\r\n\r\n    return (\r\n        <div className=\"App\">\r\n            <Todolist title=\"What to learn\"\r\n                      tasks={tasksForTodolist}\r\n                      removeTask={removeTask}\r\n                      changeFilter={changeFilter}\r\n                      addTask={addTask}\r\n                      changeTaskStatus={changeStatus}\r\n                      filter={filter}\r\n            />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default App;\r\n"]},"metadata":{},"sourceType":"module"}