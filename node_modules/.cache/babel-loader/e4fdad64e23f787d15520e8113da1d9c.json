{"ast":null,"code":"var _jsxFileName = \"D:\\\\Incubator\\\\todo_4_less\\\\src\\\\Todolist.tsx\";\nimport React, { useState } from 'react';\nimport './App.css';\nimport ButtonAdd from './Component/ButtonAdd';\nexport function Todolist(props) {\n  let [title, setTitle] = useState('');\n  let [error, setError] = useState(null);\n\n  const addTask = () => {\n    const trim = title.trim();\n\n    if (trim) {\n      props.addTask(trim);\n      setTitle('');\n    } else {\n      setError('Error Message');\n    }\n  };\n\n  const onChangeHandler = e => {\n    setError(null);\n    setTitle(e.currentTarget.value);\n  };\n\n  const onKeyPressHandler = e => {\n    if (e.charCode === 13) {\n      addTask();\n    }\n  };\n  /* const onAllClickHandler = () => props.changeFilter('all');\r\n   const onActiveClickHandler = () => props.changeFilter('active');\r\n   const onCompletedClickHandler = () => props.changeFilter('completed');*/\n\n\n  const errorMessage = error ? 'error' : '';\n  /* const filterColorButton = () => props.filter*/\n\n  const onCockHandler = filterValue => {\n    props.changeFilter(filterValue);\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 12\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 9\n    }\n  }, props.title), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    className: errorMessage,\n    value: title,\n    onChange: onChangeHandler,\n    onKeyPress: onKeyPressHandler,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: addTask,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 13\n    }\n  }, \"+\"), error && /*#__PURE__*/React.createElement(\"div\", {\n    className: 'error-message',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 24\n    }\n  }, error)), /*#__PURE__*/React.createElement(\"ul\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 9\n    }\n  }, props.tasks.map(t => {\n    const onClickHandler = () => props.removeTask(t.id);\n    /* const isDoneHandler = (e: ChangeEvent<HTMLInputElement>) => {\r\n         props.isDoneCheked(t.id, e.currentTarget.checked)\r\n     }*/\n\n\n    return /*#__PURE__*/React.createElement(\"li\", {\n      key: t.id,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 28\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      type: \"checkbox\",\n      onChange: event => {\n        props.cheked(t.id, event.currentTarget.checked);\n      },\n      checked: t.isDone,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 25\n      }\n    }), /*#__PURE__*/React.createElement(\"span\", {\n      className: t.isDone ? 'is-done' : '',\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 25\n      }\n    }, t.title), /*#__PURE__*/React.createElement(\"button\", {\n      onClick: onClickHandler,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 25\n      }\n    }, \"x\"));\n  })), /*#__PURE__*/React.createElement(ButtonAdd, {\n    value: 'active',\n    onCockHandler: onCockHandler,\n    filter: props.filter,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(ButtonAdd, {\n    value: 'completed',\n    onCockHandler: onCockHandler,\n    filter: props.filter,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(ButtonAdd, {\n    value: 'all',\n    onCockHandler: onCockHandler,\n    filter: props.filter,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 13\n    }\n  }));\n}","map":{"version":3,"sources":["D:/Incubator/todo_4_less/src/Todolist.tsx"],"names":["React","useState","ButtonAdd","Todolist","props","title","setTitle","error","setError","addTask","trim","onChangeHandler","e","currentTarget","value","onKeyPressHandler","charCode","errorMessage","onCockHandler","filterValue","changeFilter","tasks","map","t","onClickHandler","removeTask","id","event","cheked","checked","isDone","filter"],"mappings":"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","sourcesContent":["import React, { ChangeEvent, KeyboardEvent, useState } from 'react';\r\nimport { FilterValuesType } from './App';\r\nimport './App.css';\r\nimport ButtonAdd from './Component/ButtonAdd';\r\n\r\ntype TaskType = {\r\n    id: string\r\n    title: string\r\n    isDone: boolean\r\n}\r\n\r\ntype PropsType = {\r\n    title: string\r\n    tasks: Array<TaskType>\r\n    removeTask: (taskId: string) => void\r\n    changeFilter: (value: FilterValuesType) => void\r\n    addTask: (title: string) => void\r\n    /*isDoneCheked: (id: string, isDone: boolean) => void */\r\n    cheked: (id:string, isDone:boolean)=> void\r\n    filter: FilterValuesType\r\n\r\n}\r\n\r\nexport function Todolist(props: PropsType) {\r\n\r\n    let [title, setTitle] = useState('')\r\n    let [error,setError] = useState<null | string >(null)\r\n\r\n    const addTask = () => {\r\n        const trim = title.trim()\r\n        if (trim) {\r\n            props.addTask(trim)\r\n            setTitle('')\r\n        } else {\r\n            setError('Error Message')\r\n        }\r\n    }\r\n\r\n    const onChangeHandler = (e: ChangeEvent<HTMLInputElement>) => {\r\n        setError(null)\r\n        setTitle(e.currentTarget.value)\r\n    }\r\n\r\n    const onKeyPressHandler = (e: KeyboardEvent<HTMLInputElement>) => {\r\n\r\n        if (e.charCode === 13) {\r\n            addTask();\r\n        }\r\n    }\r\n   /* const onAllClickHandler = () => props.changeFilter('all');\r\n    const onActiveClickHandler = () => props.changeFilter('active');\r\n    const onCompletedClickHandler = () => props.changeFilter('completed');*/\r\n    const errorMessage = error ? 'error' : ''\r\n   /* const filterColorButton = () => props.filter*/\r\n\r\n    const onCockHandler = (filterValue:FilterValuesType) => {\r\n        props.changeFilter(filterValue)\r\n    }\r\n    return <div>\r\n        <h3>{props.title}</h3>\r\n        <div>\r\n            <input className={errorMessage} value={title}\r\n                   onChange={onChangeHandler}\r\n                   onKeyPress={onKeyPressHandler}\r\n            />\r\n            <button onClick={addTask}>+</button>\r\n            {error &&  <div className={'error-message'}>{error}</div>}\r\n        </div>\r\n        <ul>\r\n            {\r\n                props.tasks.map(t => {\r\n                    const onClickHandler = () => props.removeTask(t.id)\r\n                   /* const isDoneHandler = (e: ChangeEvent<HTMLInputElement>) => {\r\n                        props.isDoneCheked(t.id, e.currentTarget.checked)\r\n                    }*/\r\n                    return <li key={t.id}>\r\n                        <input type=\"checkbox\"  onChange={ (event: ChangeEvent<HTMLInputElement>) => {\r\n                            props.cheked(t.id, event.currentTarget.checked)\r\n                        }\r\n                        } checked={t.isDone}/>\r\n                        <span className={t.isDone ? 'is-done' : ''}>{t.title}</span>\r\n                        <button onClick={onClickHandler}>x</button>\r\n                    </li>\r\n                })\r\n            }\r\n        </ul>\r\n            <ButtonAdd value={'active'} onCockHandler={onCockHandler} filter={props.filter} />\r\n            <ButtonAdd value={'completed'} onCockHandler={onCockHandler} filter={props.filter} />\r\n            <ButtonAdd value={'all'} onCockHandler={onCockHandler} filter={props.filter} />\r\n\r\n    </div>\r\n}\r\n"]},"metadata":{},"sourceType":"module"}