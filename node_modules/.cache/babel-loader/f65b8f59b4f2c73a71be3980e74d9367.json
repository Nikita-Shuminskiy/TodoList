{"ast":null,"code":"var _jsxFileName = \"D:\\\\Incubator\\\\todo_4_less\\\\src\\\\Todolist.tsx\";\nimport React, { useState } from 'react';\nexport function Todolist(props) {\n  let [title, setTitle] = useState('');\n\n  const addTask = () => {\n    if (title.trim() !== '') {\n      props.addTask(title);\n      setTitle('');\n    }\n  };\n\n  const onChangeHandler = e => {\n    setTitle(e.currentTarget.value);\n  };\n\n  const onKeyPressHandler = e => {\n    if (e.charCode === 13) {\n      addTask();\n    }\n  };\n\n  const onAllClickHandler = () => props.changeFilter('all');\n\n  const onActiveClickHandler = () => props.changeFilter('active');\n\n  const onCompletedClickHandler = () => props.changeFilter('completed');\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 12\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 9\n    }\n  }, props.title), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    value: title,\n    onChange: onChangeHandler,\n    onKeyPress: onKeyPressHandler,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: addTask,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 13\n    }\n  }, \"+\")), /*#__PURE__*/React.createElement(\"ul\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 9\n    }\n  }, props.tasks.map(t => {\n    const onClickHandler = () => props.removeTask(t.id);\n\n    const isDoneHandler = e => {};\n\n    return /*#__PURE__*/React.createElement(\"li\", {\n      key: t.id,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 28\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      type: \"checkbox\",\n      onChange: isDoneHandler,\n      checked: t.isDone,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 25\n      }\n    }), /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 25\n      }\n    }, t.title), /*#__PURE__*/React.createElement(\"button\", {\n      onClick: onClickHandler,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 25\n      }\n    }, \"x\"));\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    onClick: onAllClickHandler,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 13\n    }\n  }, \"All\"), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: onActiveClickHandler,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 13\n    }\n  }, \"Active\"), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: onCompletedClickHandler,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 13\n    }\n  }, \"Completed\")));\n}","map":{"version":3,"sources":["D:/Incubator/todo_4_less/src/Todolist.tsx"],"names":["React","useState","Todolist","props","title","setTitle","addTask","trim","onChangeHandler","e","currentTarget","value","onKeyPressHandler","charCode","onAllClickHandler","changeFilter","onActiveClickHandler","onCompletedClickHandler","tasks","map","t","onClickHandler","removeTask","id","isDoneHandler","isDone"],"mappings":";AAAA,OAAOA,KAAP,IAA4CC,QAA5C,QAA4D,OAA5D;AAkBA,OAAO,SAASC,QAAT,CAAkBC,KAAlB,EAAoC;AAEvC,MAAI,CAACC,KAAD,EAAQC,QAAR,IAAoBJ,QAAQ,CAAC,EAAD,CAAhC;;AAEA,QAAMK,OAAO,GAAG,MAAM;AAClB,QAAIF,KAAK,CAACG,IAAN,OAAiB,EAArB,EAAyB;AACrBJ,MAAAA,KAAK,CAACG,OAAN,CAAcF,KAAd;AACAC,MAAAA,QAAQ,CAAC,EAAD,CAAR;AACH;AACJ,GALD;;AAOA,QAAMG,eAAe,GAAIC,CAAD,IAAsC;AAC1DJ,IAAAA,QAAQ,CAACI,CAAC,CAACC,aAAF,CAAgBC,KAAjB,CAAR;AACH,GAFD;;AAIA,QAAMC,iBAAiB,GAAIH,CAAD,IAAwC;AAC9D,QAAIA,CAAC,CAACI,QAAF,KAAe,EAAnB,EAAuB;AACnBP,MAAAA,OAAO;AACV;AACJ,GAJD;;AAMA,QAAMQ,iBAAiB,GAAG,MAAMX,KAAK,CAACY,YAAN,CAAmB,KAAnB,CAAhC;;AACA,QAAMC,oBAAoB,GAAG,MAAMb,KAAK,CAACY,YAAN,CAAmB,QAAnB,CAAnC;;AACA,QAAME,uBAAuB,GAAG,MAAMd,KAAK,CAACY,YAAN,CAAmB,WAAnB,CAAtC;;AAEA,sBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKZ,KAAK,CAACC,KAAX,CADG,eAEH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAO,IAAA,KAAK,EAAEA,KAAd;AACO,IAAA,QAAQ,EAAEI,eADjB;AAEO,IAAA,UAAU,EAAEI,iBAFnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,eAKI;AAAQ,IAAA,OAAO,EAAEN,OAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SALJ,CAFG,eASH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEQH,KAAK,CAACe,KAAN,CAAYC,GAAZ,CAAgBC,CAAC,IAAI;AAEjB,UAAMC,cAAc,GAAG,MAAMlB,KAAK,CAACmB,UAAN,CAAiBF,CAAC,CAACG,EAAnB,CAA7B;;AACA,UAAMC,aAAa,GAAIf,CAAD,IAAqC,CAE1D,CAFD;;AAIA,wBAAO;AAAI,MAAA,GAAG,EAAEW,CAAC,CAACG,EAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACH;AAAO,MAAA,IAAI,EAAC,UAAZ;AAAuB,MAAA,QAAQ,EAAEC,aAAjC;AAAgD,MAAA,OAAO,EAAEJ,CAAC,CAACK,MAA3D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADG,eAEH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAOL,CAAC,CAAChB,KAAT,CAFG,eAGH;AAAQ,MAAA,OAAO,EAAEiB,cAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAHG,CAAP;AAKH,GAZD,CAFR,CATG,eA0BH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAQ,IAAA,OAAO,EAAEP,iBAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WADJ,eAEI;AAAQ,IAAA,OAAO,EAAEE,oBAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFJ,eAGI;AAAQ,IAAA,OAAO,EAAEC,uBAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAHJ,CA1BG,CAAP;AAgCH","sourcesContent":["import React, { ChangeEvent, KeyboardEvent, useState } from 'react';\r\nimport { FilterValuesType } from './App';\r\n\r\ntype TaskType = {\r\n    id: string\r\n    title: string\r\n    isDone: boolean\r\n}\r\n\r\ntype PropsType = {\r\n    title: string\r\n    tasks: Array<TaskType>\r\n    removeTask: (taskId: string) => void\r\n    changeFilter: (value: FilterValuesType) => void\r\n    addTask: (title: string) => void\r\n    checkDone: (id:string ,isDone:boolean) => void\r\n}\r\n\r\nexport function Todolist(props: PropsType) {\r\n\r\n    let [title, setTitle] = useState('')\r\n\r\n    const addTask = () => {\r\n        if (title.trim() !== '') {\r\n            props.addTask(title);\r\n            setTitle('');\r\n        }\r\n    }\r\n\r\n    const onChangeHandler = (e: ChangeEvent<HTMLInputElement>) => {\r\n        setTitle(e.currentTarget.value)\r\n    }\r\n\r\n    const onKeyPressHandler = (e: KeyboardEvent<HTMLInputElement>) => {\r\n        if (e.charCode === 13) {\r\n            addTask();\r\n        }\r\n    }\r\n\r\n    const onAllClickHandler = () => props.changeFilter('all');\r\n    const onActiveClickHandler = () => props.changeFilter('active');\r\n    const onCompletedClickHandler = () => props.changeFilter('completed');\r\n\r\n    return <div>\r\n        <h3>{props.title}</h3>\r\n        <div>\r\n            <input value={title}\r\n                   onChange={onChangeHandler}\r\n                   onKeyPress={onKeyPressHandler}\r\n            />\r\n            <button onClick={addTask}>+</button>\r\n        </div>\r\n        <ul>\r\n            {\r\n                props.tasks.map(t => {\r\n\r\n                    const onClickHandler = () => props.removeTask(t.id)\r\n                    const isDoneHandler = (e:ChangeEvent<HTMLInputElement>) => {\r\n\r\n                    }\r\n\r\n                    return <li key={t.id}>\r\n                        <input type=\"checkbox\" onChange={isDoneHandler} checked={t.isDone}/>\r\n                        <span>{t.title}</span>\r\n                        <button onClick={onClickHandler}>x</button>\r\n                    </li>\r\n                })\r\n            }\r\n        </ul>\r\n        <div>\r\n            <button onClick={onAllClickHandler}>All</button>\r\n            <button onClick={onActiveClickHandler}>Active</button>\r\n            <button onClick={onCompletedClickHandler}>Completed</button>\r\n        </div>\r\n    </div>\r\n}\r\n"]},"metadata":{},"sourceType":"module"}