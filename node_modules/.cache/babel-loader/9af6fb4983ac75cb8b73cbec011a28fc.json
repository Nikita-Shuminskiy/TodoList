{"ast":null,"code":"var _jsxFileName = \"D:\\\\Incubator\\\\Lession_Week_TODO\\\\Tuesday\\\\less_5\\\\src\\\\App.tsx\";\nimport React, { useState } from 'react';\nimport './App.css';\nimport { Todolist } from './Todolist';\nimport { v1 } from 'uuid';\n\nfunction App() {\n  // BLL\n  const todoID_1 = v1();\n  const todoID_2 = v1();\n  const [todolist, setTodolist] = useState([// step 2\n  {\n    id: todoID_1,\n    title: \"Yoe\",\n    filter: 'all'\n  }, {\n    id: todoID_2,\n    title: \"HTML&CSS\",\n    filter: 'all'\n  }]);\n  let [tasks, setTasks] = useState({\n    // обьект\n    [todoID_1]: [{\n      id: v1(),\n      title: \"HTML&CSS\",\n      isDone: true\n    }, {\n      id: v1(),\n      title: \"JS\",\n      isDone: true\n    }, {\n      id: v1(),\n      title: \"ReactJS\",\n      isDone: false\n    }, {\n      id: v1(),\n      title: \"Rest API\",\n      isDone: false\n    }, {\n      id: v1(),\n      title: \"GraphQL\",\n      isDone: false\n    }],\n    [todoID_2]: [{\n      id: v1(),\n      title: \"HTML&CSS\",\n      isDone: true\n    }, {\n      id: v1(),\n      title: \"JS\",\n      isDone: true\n    }, {\n      id: v1(),\n      title: \"ReactJS\",\n      isDone: false\n    }, {\n      id: v1(),\n      title: \"Rest API\",\n      isDone: false\n    }, {\n      id: v1(),\n      title: \"GraphQL\",\n      isDone: false\n    }]\n  }); ///\n\n  /*    let [filter, setFilter] = useState<FilterValuesType>(\"all\");*/\n\n  function removeTask(taskID, todoLID) {\n    tasks[todoLID] = tasks[todoLID].filter(t => t.id != taskID); // имутабельно\n\n    setTasks({ ...tasks\n    }); // на верхний уровень пилим обьект\n  }\n\n  function addTask(title, todoLID) {\n    const newTask = {\n      id: v1(),\n      title: title,\n      isDone: false\n    };\n    tasks[todoLID] = [newTask, ...tasks[todoLID]]; //  получаем новый массив\n\n    setTasks({ ...tasks\n    });\n  }\n\n  function changeStatus(taskId, isDone, todoLID) {\n    tasks[todoLID] = tasks[todoLID].map(t => {\n      if (t.id === taskId) {\n        return { ...t,\n          isDone: isDone\n        };\n      }\n\n      return t;\n    });\n    setTasks({ ...tasks\n    });\n  }\n\n  function changeTodoFilter(value, todoLID) {\n    setTodolist(todolist.map(t => t.id === todoLID ? { ...t,\n      filter: value\n    } : t));\n  }\n\n  function removeTodoList(todoLID) {\n    setTodolist(todolist.filter(f => f.id !== todoLID));\n    delete tasks[todoLID];\n  }\n\n  const todolistsElements = todolist.map(todo => {\n    let tasksForTodolist = tasks[todo.id];\n\n    if (todo.filter === \"active\") {\n      tasksForTodolist = tasks[todo.id].filter(t => t.isDone === false);\n    }\n\n    if (todo.filter === \"completed\") {\n      tasksForTodolist = tasks[todo.id].filter(t => t.isDone === true);\n    }\n\n    return /*#__PURE__*/React.createElement(Todolist, {\n      title: todo.title,\n      todoLID: todo.id,\n      key: todo.id,\n      tasks: tasksForTodolist,\n      removeTask: removeTask,\n      changeFilter: changeTodoFilter,\n      addTask: addTask,\n      changeTaskStatus: changeStatus,\n      filter: todo.filter,\n      removeTodoList: removeTodoList,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 13\n      }\n    });\n  });\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"App\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 9\n    }\n  }, todolistsElements);\n}\n\nexport default App;","map":{"version":3,"sources":["D:/Incubator/Lession_Week_TODO/Tuesday/less_5/src/App.tsx"],"names":["React","useState","Todolist","v1","App","todoID_1","todoID_2","todolist","setTodolist","id","title","filter","tasks","setTasks","isDone","removeTask","taskID","todoLID","t","addTask","newTask","changeStatus","taskId","map","changeTodoFilter","value","removeTodoList","f","todolistsElements","todo","tasksForTodolist"],"mappings":"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","sourcesContent":["import React, {useState} from 'react';\r\nimport './App.css';\r\nimport { TaskType, Todolist } from './Todolist';\r\nimport {v1} from 'uuid';\r\n\r\nexport type FilterValuesType = \"all\" | \"active\" | \"completed\";\r\nexport type TodoListType = { // step 1\r\n    id:string\r\n    title:string\r\n    filter:FilterValuesType\r\n}\r\n\r\ntype TaskTypeState = {\r\n    [key:string]:TaskType[]\r\n}\r\n\r\n\r\n\r\nfunction App() {\r\n    // BLL\r\n    const todoID_1 = v1()\r\n    const todoID_2 = v1()\r\n    const [todolist,setTodolist] = useState<TodoListType[]>([ // step 2\r\n        {id: todoID_1, title: \"Yoe\", filter: 'all'},\r\n        {id: todoID_2, title: \"HTML&CSS\", filter: 'all'}\r\n\r\n    ])\r\n    let [tasks, setTasks] = useState<TaskTypeState>({ // обьект\r\n        [todoID_1]: [\r\n            {id: v1(), title: \"HTML&CSS\", isDone: true},\r\n            {id: v1(), title: \"JS\", isDone: true},\r\n            {id: v1(), title: \"ReactJS\", isDone: false},\r\n            {id: v1(), title: \"Rest API\", isDone: false},\r\n            {id: v1(), title: \"GraphQL\", isDone: false},\r\n        ],\r\n        [todoID_2]: [\r\n            {id: v1(), title: \"HTML&CSS\", isDone: true},\r\n            {id: v1(), title: \"JS\", isDone: true},\r\n            {id: v1(), title: \"ReactJS\", isDone: false},\r\n            {id: v1(), title: \"Rest API\", isDone: false},\r\n            {id: v1(), title: \"GraphQL\", isDone: false},\r\n        ]\r\n    });\r\n\r\n    ///\r\n/*    let [filter, setFilter] = useState<FilterValuesType>(\"all\");*/\r\n\r\n    function removeTask(taskID: string , todoLID:string) {\r\n        tasks[todoLID] = tasks[todoLID].filter(t => t.id != taskID); // имутабельно\r\n        setTasks({...tasks}); // на верхний уровень пилим обьект\r\n    }\r\n    function addTask(title: string, todoLID:string) {\r\n        const newTask = {id: v1(), title: title, isDone: false};\r\n        tasks[todoLID] = [newTask, ...tasks[todoLID]]; //  получаем новый массив\r\n        setTasks({...tasks});\r\n    }\r\n    function changeStatus(taskId: string, isDone: boolean,todoLID:string) {\r\n        tasks[todoLID] = tasks[todoLID].map(t => {\r\n        if (t.id === taskId) {\r\n            return {...t, isDone:isDone}\r\n        }\r\n        return t\r\n        })\r\n        setTasks({...tasks});\r\n    }\r\n    function changeTodoFilter(value: FilterValuesType, todoLID:string) {\r\n        setTodolist(todolist.map( t => t.id === todoLID ? {...t , filter: value} : t))\r\n    }\r\n    function removeTodoList (todoLID:string)  {\r\n        setTodolist(todolist.filter(f => f.id !== todoLID))\r\n        delete tasks[todoLID]\r\n    }\r\n\r\n\r\n    const todolistsElements = todolist.map( todo => {\r\n        let tasksForTodolist = tasks[todo.id];\r\n        if (todo.filter === \"active\") {\r\n            tasksForTodolist = tasks[todo.id].filter(t => t.isDone === false);\r\n        }\r\n        if (todo.filter === \"completed\") {\r\n            tasksForTodolist = tasks[todo.id].filter(t => t.isDone === true);\r\n        }\r\n        return (\r\n            <Todolist title={todo.title}\r\n                      todoLID={todo.id}\r\n                      key={todo.id}\r\n                      tasks={tasksForTodolist}\r\n                      removeTask={removeTask}\r\n                      changeFilter={changeTodoFilter}\r\n                      addTask={addTask}\r\n                      changeTaskStatus={changeStatus}\r\n                      filter={todo.filter}\r\n                      removeTodoList={removeTodoList}\r\n            />\r\n        )\r\n    })\r\n\r\n    return (\r\n        <div className=\"App\">\r\n            {todolistsElements}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default App;\r\n"]},"metadata":{},"sourceType":"module"}