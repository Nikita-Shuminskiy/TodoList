{"ast":null,"code":"var _jsxFileName = \"D:\\\\Incubator\\\\Lession_Week_TODO\\\\TodoGitHGub\\\\src\\\\Todolist.tsx\";\nimport React, { useState } from 'react';\nexport function Todolist(props) {\n  let [title, setTitle] = useState(\"\");\n  let [error, setError] = useState(null);\n\n  const addTask = () => {\n    if (title.trim() !== \"\") {\n      props.addTask(title.trim(), props.id);\n      setTitle(\"\");\n    } else {\n      setError(\"Title is required\");\n    }\n  };\n\n  const onChangeHandler = e => {\n    setTitle(e.currentTarget.value);\n  };\n\n  const onKeyPressHandler = e => {\n    setError(null);\n\n    if (e.charCode === 13) {\n      addTask();\n    }\n  };\n\n  const onAllClickHandler = () => props.changeFilter(\"all\", props.id);\n\n  const onActiveClickHandler = () => props.changeFilter(\"active\", props.id);\n\n  const onCompletedClickHandler = () => props.changeFilter(\"completed\", props.id);\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 12\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 9\n    }\n  }, props.title), \" \", /*#__PURE__*/React.createElement(\"button\", {\n    onClick: props.delTask,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 32\n    }\n  }, \"x\"), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    value: title,\n    onChange: onChangeHandler,\n    onKeyPress: onKeyPressHandler,\n    className: error ? \"error\" : \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: addTask,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 13\n    }\n  }, \"+\"), error && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"error-message\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 23\n    }\n  }, error)), /*#__PURE__*/React.createElement(\"ul\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 9\n    }\n  }, props.tasks.map(t => {\n    const onClickHandler = () => props.removeTask(t.id, props.id);\n\n    const onChangeHandler = e => {\n      props.changeTaskStatus(t.id, e.currentTarget.checked, props.id);\n    };\n\n    return /*#__PURE__*/React.createElement(\"li\", {\n      key: t.id,\n      className: t.isDone ? \"is-done\" : \"\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 28\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      type: \"checkbox\",\n      onChange: onChangeHandler,\n      checked: t.isDone,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 25\n      }\n    }), /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 25\n      }\n    }, t.title), /*#__PURE__*/React.createElement(\"button\", {\n      onClick: onClickHandler,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 25\n      }\n    }, \"x\"));\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    className: props.filter === 'all' ? \"active-filter\" : \"\",\n    onClick: onAllClickHandler,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 13\n    }\n  }, \"All\"), /*#__PURE__*/React.createElement(\"button\", {\n    className: props.filter === 'active' ? \"active-filter\" : \"\",\n    onClick: onActiveClickHandler,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 13\n    }\n  }, \"Active\"), /*#__PURE__*/React.createElement(\"button\", {\n    className: props.filter === 'completed' ? \"active-filter\" : \"\",\n    onClick: onCompletedClickHandler,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 13\n    }\n  }, \"Completed\")));\n}","map":{"version":3,"sources":["D:/Incubator/Lession_Week_TODO/TodoGitHGub/src/Todolist.tsx"],"names":["React","useState","Todolist","props","title","setTitle","error","setError","addTask","trim","id","onChangeHandler","e","currentTarget","value","onKeyPressHandler","charCode","onAllClickHandler","changeFilter","onActiveClickHandler","onCompletedClickHandler","delTask","tasks","map","t","onClickHandler","removeTask","changeTaskStatus","checked","isDone","filter"],"mappings":"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","sourcesContent":["import React, {ChangeEvent, KeyboardEvent, useState} from 'react';\r\nimport {FilterValuesType} from './App';\r\n\r\ntype TaskType = {\r\n    id: string\r\n    title: string\r\n    isDone: boolean\r\n}\r\n\r\ntype PropsType = {\r\n    title: string\r\n    tasks: Array<TaskType>\r\n    removeTask: (taskId: string,todoId:string) => void\r\n    changeFilter: (value: FilterValuesType,todoId:string) => void\r\n    addTask: (title: string,todoId:string) => void\r\n    changeTaskStatus: (taskId: string, isDone: boolean,todoId:string) => void\r\n    filter: FilterValuesType\r\n    id:string\r\n    delTask: () => void\r\n}\r\n\r\nexport function Todolist(props: PropsType) {\r\n\r\n    let [title, setTitle] = useState(\"\")\r\n    let [error, setError] = useState<string | null>(null)\r\n\r\n    const addTask = () => {\r\n        if (title.trim() !== \"\") {\r\n            props.addTask(title.trim(),props.id);\r\n            setTitle(\"\");\r\n        } else {\r\n            setError(\"Title is required\");\r\n        }\r\n    }\r\n\r\n    const onChangeHandler = (e: ChangeEvent<HTMLInputElement>) => {\r\n        setTitle(e.currentTarget.value)\r\n    }\r\n\r\n    const onKeyPressHandler = (e: KeyboardEvent<HTMLInputElement>) => {\r\n        setError(null);\r\n        if (e.charCode === 13) {\r\n            addTask();\r\n        }\r\n    }\r\n\r\n    const onAllClickHandler = () => props.changeFilter(\"all\",props.id);\r\n    const onActiveClickHandler = () => props.changeFilter(\"active\",props.id);\r\n    const onCompletedClickHandler = () => props.changeFilter(\"completed\",props.id);\r\n\r\n\r\n    return <div>\r\n        <h3>{props.title}</h3> <button onClick={props.delTask} >x</button>\r\n        <div>\r\n            <input value={title}\r\n                   onChange={onChangeHandler}\r\n                   onKeyPress={onKeyPressHandler}\r\n                   className={error ? \"error\" : \"\"}\r\n            />\r\n            <button onClick={addTask}>+</button>\r\n            {error && <div className=\"error-message\">{error}</div>}\r\n        </div>\r\n        <ul>\r\n            {\r\n                props.tasks.map(t => {\r\n                    const onClickHandler = () => props.removeTask(t.id,props.id)\r\n                    const onChangeHandler = (e: ChangeEvent<HTMLInputElement>) => {\r\n                        props.changeTaskStatus(t.id, e.currentTarget.checked,props.id);\r\n                    }\r\n\r\n                    return <li key={t.id} className={t.isDone ? \"is-done\" : \"\"}>\r\n                        <input type=\"checkbox\"\r\n                               onChange={onChangeHandler}\r\n                               checked={t.isDone}/>\r\n                        <span>{t.title}</span>\r\n                        <button onClick={onClickHandler}>x</button>\r\n                    </li>\r\n                })\r\n            }\r\n        </ul>\r\n        <div>\r\n            <button className={props.filter === 'all' ? \"active-filter\" : \"\"}\r\n                    onClick={onAllClickHandler}>All</button>\r\n            <button className={props.filter === 'active' ? \"active-filter\" : \"\"}\r\n                onClick={onActiveClickHandler}>Active</button>\r\n            <button className={props.filter === 'completed' ? \"active-filter\" : \"\"}\r\n                onClick={onCompletedClickHandler}>Completed</button>\r\n        </div>\r\n    </div>\r\n}\r\n"]},"metadata":{},"sourceType":"module"}